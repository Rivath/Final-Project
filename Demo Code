/*
   SD card attached to SPI bus as follows:
 ** MOSI - pin 11
 ** MISO - pin 12
 ** CLK - pin 13
 ** CS - pin 10 

   LCD Shield attached to IC2 as follows:
 ** SDA - pin A4
 ** SCL - pin A5

  Read / Write functionality based on code by:
  David A. Mellis
  created   Nov 2010
  Tom Igoe
  modified 9 Apr 2012

  LCD functionality based on code by:
  David A. Mellis
  created 18 Apr 2008
  adafruit
  modified 21 Dec 2015
  
  modified 10 Mar 2016
  by John Kessinger
*/

#include <SPI.h>
#include <SD.h>
#include <Wire.h>
#include <Adafruit_RGBLCDShield.h>
#include <utility/Adafruit_MCP23017.h>

// The shield uses the I2C SCL and SDA pins. On classic Arduinos
// this is Analog 4 and 5 so you can't use those for analogRead() anymore
// However, you can connect other I2C sensors to the I2C bus and share
// the I2C bus.
Adafruit_RGBLCDShield lcd = Adafruit_RGBLCDShield();

#define WHITE 0x7 //For background color control on RGB LCDs

File myFile; //Sets the file we will be using to store the SD card info
String entry = "Lets Demo!"; //Sets what will be written to the .txt file
int count = entry.length(); //Records the length of the entry
String level; //Used to control display from button commands 


void setup() {
  // Debugging output
  Serial.begin(9600);
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  lcd.setBacklight(WHITE);

  // Open serial communications and wait for port to open:
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }

  Serial.print("Initializing SD card...");

  if (!SD.begin(10)) {
    Serial.println("initialization failed!");
    return;
  }
  Serial.println("initialization done.");

  // delete the file:
  if (SD.exists("example.txt")) {
    Serial.println("Removing example.txt...");
    SD.remove("example.txt");
  }
  // creates new file:
  else {
    Serial.println("Creating example.txt...");
    myFile = SD.open("example.txt", FILE_WRITE);
    myFile.close();
  }

  // open the file for writing. In the actual project this function will
  // be removed so that the .txt file cannot be changed by the user
  myFile = SD.open("example.txt", FILE_WRITE);

  // if the file opened okay, write to it:
  if (myFile) {
    Serial.print("Writing to example.txt...");
    myFile.println(entry);
    // close the file:
    myFile.close();
    Serial.println("done.");
  } else {
    // if the file didn't open, print an error:
    Serial.println("error opening example.txt");
  }

  // re-open the file for reading:
  myFile = SD.open("example.txt");
  if (myFile) {
    Serial.println("File Opened");
    lcd.clear();
    delay( 5 );
    lcd.setCursor(0, 0 );
    while (myFile.available()) {
      char c = myFile.read(); // records the file data as a char
      Serial.write(c);
      lcd.print(c); // displays the .txt data 
    }

    // This part eliminates any garage characters created at the end of the 
    // data from the .txt file. It uses the length command to display only
    // the user input string
    lcd.setCursor(count, 0);
    int fixer = 16 - count;
    for (int i = 0; i < fixer; i++) {
      lcd.print(" ");
    }
    myFile.close();
  } else {
    // if the file didn't open, print an error:
    Serial.println("error opening example.txt");
  }
}

uint8_t i = 0;

void loop() {

  uint8_t buttons = lcd.readButtons();

  // Test code for future project. The group is still debaiting to use the
  // touch or lcd screen for user interface. These if statements allow the user
  // to choose from 3 possible levels, Easy, Medium, and Hard. The down button
  // is used to make the selction. Select button starts level select.
  if (buttons) {
    lcd.clear();
    lcd.setCursor(0, 0);
    if (buttons & BUTTON_UP) {
      lcd.print("Select Level:");
      lcd.setCursor(0,1);
      level = "Medium";
      lcd.print(level);
    }
    if (buttons & BUTTON_DOWN) {
      lcd.print("Level set to:");
      lcd.setCursor(0,1);
      if (level == "Easy") {
        lcd.print(level);
      }
      else if (level == "Medium") {
        lcd.print(level);
      }
      else {
        lcd.print(level);
      }
    }
    if (buttons & BUTTON_LEFT) {
      lcd.print("Select Level:");
      lcd.setCursor(0,1);
      level = "Easy";
      lcd.print(level);
    }
    if (buttons & BUTTON_RIGHT) {
      lcd.print("Select Level:");
      lcd.setCursor(0,1);
      level = "Hard";
      lcd.print(level);
      
    }
    if (buttons & BUTTON_SELECT) {
      lcd.print("Select Level:");
    }
  }
}

